{"version":3,"sources":["components/Welcome/Welcome.js","components/Links/Links.js","components/Project/Project.js","components/ProjectSection/ProjectSection.js","components/AboutMe/AboutMe.js","components/App.js","serviceWorker.js","index.js"],"names":["Welcome","className","id","Links","target","rel","href","download","Project","title","description","link","ProjectSection","AboutMe","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mUAYeA,MATf,WACI,OACI,yBAAKC,UAAU,WACX,0BAAMC,GAAG,YAAW,iDACpB,0BAAMA,GAAG,YAAW,qD,MCQjBC,MAZf,WACI,OACI,yBAAKF,UAAU,SACX,qCACA,8BAAM,8BAAM,uBAAGG,OAAO,SAASC,IAAI,sBAAsBC,KAAK,qCAAlD,YACZ,8BAAM,8BAAM,uBAAGF,OAAO,SAASC,IAAI,sBAAsBC,KAAK,0CAAlD,cACZ,8BAAM,8BAAM,uBAAGF,OAAO,SAASC,IAAI,sBAAsBC,KAAK,wBAAwBC,UAAQ,GAAlF,YACZ,8BAAM,8BAAM,uBAAGH,OAAO,SAASC,IAAI,sBAAsBC,KAAK,+BAAlD,e,YCGTE,MAVf,YAA+C,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KAClC,OACI,yBAAKV,UAAU,WACX,0BAAMC,GAAG,SAAQ,uBAAGI,KAAQK,GAAOF,IAAiB,6BACpD,8BAAOC,GACP,8BCUGE,MAdf,WACI,OACI,yBAAKX,UAAU,kBACX,wCAEA,kBAAE,EAAF,CACAQ,MAAM,yBACNC,YAAY,mFACZC,KAAK,6D,MCGFE,MAZf,WACI,OACI,yBAAKZ,UAAU,WACX,4HAEI,6BAFJ,gG,MCmBGa,MAff,WAEE,OACE,yBAAKb,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,+BCPcc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.20719629.chunk.js","sourcesContent":["import React from 'react';\nimport './Welcome.css';\n\nfunction Welcome() {\n    return (\n        <div className=\"welcome\">\n            <text id=\"greeting\"><span>Hi! My name is</span></text>\n            <text id=\"nameline\"><span>Julian Coronado.</span></text>\n        </div>\n    );\n}\n\nexport default Welcome;","import React from 'react';\nimport './Links.css';\n\nfunction Links() {\n    return(\n        <div className=\"links\">\n            <h2>Links</h2>\n            <text><span><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/juliancoronado\">GitHub</a></span></text>\n            <text><span><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://linkedin.com/in/juliancoronado\">LinkedIn</a></span></text>\n            <text><span><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/jcoronado_resume.pdf\" download>Resume</a></span></text>\n            <text><span><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:julian.c28@gmail.com\">Contact</a></span></text>\n        </div>\n    );\n}\n\nexport default Links;","import React from 'react';\nimport './Project.css';\n\nfunction Project({title, description, link }) {\n    return (\n        <div className=\"project\">\n            <text id=\"title\"><a href = {link}>{title}</a></text><br></br>\n            <text>{description}</text>\n            <p></p>\n        </div>\n    );\n}\n\nexport default Project;","import React from 'react';\nimport './ProjectSection.css';\nimport Project from '../Project/Project';\n\nfunction ProjectSection() {\n    return (\n        <div className=\"projectsection\">\n            <h2>Projects</h2>\n\n            < Project\n            title=\"Minimal Bitcoin Widget\"\n            description=\"A minimal Android home-screen widget that displays the current price of Bitcoin.\"\n            link=\"https://github.com/juliancoronado/MinimalBitcoinWidget\"/>\n            \n        </div>\n    );\n}\n\nexport default ProjectSection;","import React from 'react';\nimport './AboutMe.css';\n\nfunction AboutMe() {\n    return (\n        <div className=\"aboutme\">\n            <p>\n                I'm an aspiring Product Manager / Software Engineer currently residing in Southern California.\n                <br></br>\n                I enjoy creating mobile apps, designing beautiful layouts and learning about new products.\n            </p>\n        </div>\n    );\n}\n\nexport default AboutMe;","import React from 'react';\n\n// Components imports\nimport Welcome from './Welcome/Welcome';\nimport Links from './Links/Links';\nimport ProjectSection from './ProjectSection/ProjectSection';\nimport AboutMe from './AboutMe/AboutMe';\n\nimport './App.css'\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Welcome />\n      <AboutMe />\n      <ProjectSection />\n      <Links />\n      {/* <Donate /> */}\n      <br></br>\n      {/* <Wip /> */}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}